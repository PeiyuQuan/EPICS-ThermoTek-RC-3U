record (mbbi, "$(P)cotrolstatusmode")
		{
			field(DTYP, "stream")
			field(INP, "@RC3U.proto watchdog($(P)pumpstatusflag, $(P)alarmstatusflag, $(P)warningstatusflag) $(PORT)")
			field(ZRVL, "0")
			field(ONVL, "1")
			field(TWVL, "2")
			field(THVL, "3")
			field(FRVL, "4")
			field(ZRST, "Auto-start")
			field(ONST, "Standby")
			field(TWST, "Run")
			field(THST, "Safety")
			field(FRST, "Test")
			field(SCAN, "1 second")
		}



record (bi, "$(P)pumpstatusflag")
		{
			field(DESC, "pump status flag")
			field(ZNAM, "OFF")
			field(ONAM, "ON")
		}

record (bi, "$(P)alarmstatusflag")
		{
			field(DESC, "alarm status flag")
			field(ZNAM, "No Alarm")
			field(ONAM, "Alarm present")
		}
		
record (bi, "$(P)warningstatusflag")
		{
			field(DESC, "warning status flag")
			field(ZNAM, "No warning")
			field(ONAM, "Warning present")
		}
#record (bi, "$(P)ReadContSensor")
#		{
#			field(DESC, "Read control sensor")
#			field(DTYP, "stream")
#			field(INP, "@RC3U.proto ReadContSensor $(PORT)")
#			field(SCAN, "1 second")
#		}
		
#record (ai, "$(P)ReadsetTemp_read")
#		{
#			field(DESC, "Read Set Temperature")
#			field(DTYP, "stream")
#			field(INP, "@RC3U.proto ReadsetTemp_read $(PORT)")
#			field(EGU, "degC")
#			field(SCAN, "1 second")
#			field(FLNK, "$(P)ReadsetTemp")
#		}
		
#record (calc, "$(P)ReadsetTemp")
#		{
#			field(INPA,"$(P)ReadsetTemp_read.VAL")
#			field(CALC, "A/10")
#			field(EGU, "degC")
#		}
		
#record (ai, "$(P)ReadsupTemp_read")
#		{
#			field(DESC, "Read Supply Temperature")
#			field(DTYP, "stream")
#			field(INP, "@RC3U.proto ReadsupTemp_read $(PORT)")
#			field(EGU, "degC")
#			field(SCAN, "1 second")
#			field(FLNK, "$(P)ReadsupTemp")
#		}
		
#record (calc, "$(P)ReadsupTemp")
#		{
#			field(INPA,"$(P)ReadsupTemp_read.VAL")
#			field(CALC, "A/10")
#			field(EGU, "degC")
#		}
		
#record (ai, "$(P)ReadRetTemp_read")
#		{
#			field(DESC, "Read return Temperature")
#			field(DTYP, "stream")
#			field(INP, "@RC3U.proto ReadRetTemp_read $(PORT)")
#			field(EGU, "degC")
#			field(SCAN, "1 second")
#			field(FLNK, "$(P)ReadRetTemp")
#		}
		
#record (calc, "$(P)ReadRetTemp")
#		{
#			field(INPA, "$(P)ReadRetTemp_read.VAL")
#			field(CALC, "A/10")
#			field(EGU, "degC")
#		}

#record (ai, "$(P)ReadAmbTemp_read")
#		{
#			field(DESC, "Read Ambient Temperature")
#			field(DTYP, "stream")
#			field(INP, "@RC3U.proto ReadAmbTemp_read $(PORT)")
#			field(EGU, "degC")
#			field(SCAN, "1 second")
#			field(FLNK, "$(P)ReadAmbTemp")
#		}
		
#record (calc, "$(P)ReadAmbTemp")
#		{
#			field(INPA,"$(P)ReadAmbTemp_read.VAL")
#			field(CALC, "A/10")
#			field(EGU, "degC")
#		}

#record (ai, "$(P)ReadProcFlow_read")
#		{
#			field(DESC, "Read Process Flow")
#			field(DTYP, "stream")
#			field(INP, "@RC3U.proto ReadProcFlow_read $(PORT)")
#			field(EGU, "lpm")
#			field(SCAN, "1 second")
#			field(FLNK, "$(P)ReadProcFlow")
#		}
		
#record (calc, "$(P)ReadProcFlow")
#		{
#			field(INPA,"$(P)ReadProcFlow_read.VAL")
#			field(CALC, "A/10")
#			field(EGU, "lpm")
#		}
	


#record (bo, "$(P)SetChillerStatus")
#		{
#			field(DESC, "set chiller status")
#			field(DTYP, "stream")
#			field(OUT, "@RC3U.proto SetChillerStatus $(PORT)")
#			field(ZNAM, "Standby")
#			field(ONAM, "Run")
#		}
		
#record (longout, "$(P)SetControlTemp_set")
#		{
#			field(DESC, "set control temperature")
#			field(DTYP, "stream")
#			field(OUT, "@RC3U.proto SetControlTemp_set $(PORT)")
#			field(EGU, "lpm")
#			field(SCAN, "1 second")
#			field(FLNK, "$(P)SetControlTemp")
#		}
		
#record (calc, "$(P)SetControlTemp")
#		{
#			field(INPA,"$(P)SetControlTemp_set")
#			field(CALC, "A/10")
#			field(EGU, "degC")
#		}
		
#record (mbbo, "$(P)Setcontsensor")
#		{
#			field(DTYP, "stream")
#			field(OUT, "@RC3U.proto Setcontsensor $(PORT)")
#			field(ZRVL, "0")
#			field(ONVL, "1")
#			field(TWVL, "2")
#			field(THVL, "3")
#			field(ZRST, "Supply temp")
#			field(ONST, "Return temp")
#			field(TWST, "Ext RTD")
#			field(THST, "External termistor")
#			field(SCAN, "1 second")
#		}

#record (bo, "$(P)SetExtSensorstatus")
#		{
#			field(DESC, "set extern sensor status")
#			field(DTYP, "stream")
#			field(OUT, "@RC3U.proto SetExtSensorstatus $(PORT)")
#			field(ZNAM, "External Sensors disabled")
#			field(ONAM, "External Sensors Enable")
#		}
